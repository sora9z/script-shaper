name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write # 릴리즈 생성 및 업데이트를 위해 contents 권한을 명시적으로 설정

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev

      - name: Install pyinstaller
        run: pipenv install pyinstaller --dev

      - name: Build executable
        run: |
          pipenv run pyinstaller --onefile main.py

      - name: Check generated files
        run: ls -la dist/ # dist 디렉토리 내 파일 확인

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get the latest tag or set default
        id: set_version
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.1.0")
          echo "VERSION=$TAG" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Check generated files
        run: ls -la dist/

      - name: Wait for file system to stabilize
        run: sleep 5

      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/main
          asset_name: script-shaper
          asset_content_type: application/octet-stream
